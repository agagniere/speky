kind: tests
category: functional
tests:
- id: TF001
  ref:
    - SF001
    - SN001
  short: Writing requirements as text
  long: We write requirements in a text file and read them
  initial: Blank project
  steps:
    - action: Open a file called specs.yaml in a text editor
      run: emacs specs.yaml
    - action: Write 2 requirements inside, save and exit
      sample_lang: yaml
      sample: |
        kind: specifications
        category: functional
        requirements:
        - id: S01
          long: The first requirement
        - id: S02
          long: The second requirement
    - action: Verify the requirements are human-readable
      run: cat specs.yaml
- id: TF002
  ref:
    - SF002
    - SN003
  short: Generate a PDF
  long: Output requirements in PDF format
  prereq:
    - TF001
  steps:
    - action: Copy the typst template from speky
      run: cp /tmp/speky/specs/pdf.typ .
    - action: List the yamls files of the project inside
      sample_lang: typ
      sample: |
        #speky(("specs.yaml"))
    - action: Run Typst
      run: typst compile pdf.typ
    - action: Open PDF
      run: open pdf.pdf
    - action: Verify the requirements are found inside
- id: TF003
  ref:
    - SF004
    - SN004
  short: Use Git for versionning
  long: Setup a git repo with the current files, to be able to revert any change if desired
  prereq:
    - TF002
  steps:
    - action: Initialize a git repository
      run: git init
      expected: Initialized empty Git repository in [...]
    - action: Start tracking the specification files
      run: git add specs.yaml pdf.typ
    - action: Save current files version
      run: |
        git commit -m "Initial commit: first 2 requirements"
    - action: Give a name to that version
      run: git tag 0.0.1
    - action: Delete a requirement in specs.yaml
      sample_lang: yaml
      sample: |
        kind: specifications
        category: functional
        requirements:
        - id: S01
          long: The first requirement
    - action: Confirm the requirement is gone
      run: typst compile pdf.typ && open pdf.pdf
    - action: Revert the deletion
      run: |
        git checkout -- .
    - action: Confirm the requirement is back
      run: typst compile pdf.typ && open pdf.pdf
- id: TF004
  ref:
    - SF006
  short: Add comments
  long: Write a comment file to add comments to specifications
  prereq:
    - TF002
  steps:
    - action: Create a comment file
      sample_lang: yaml
      sample: |
        kind: comments
        comments:
        - about: S01
          from: Some Person
          date: 01/01/2025
          text: The first comment
    - action: Add it to the typst source
      sample_lang: typ
      sample: |
        #speky(("specs.yaml", "comments.yaml"))
    - action: Regenerate the PDF
      run: typst compile pdf.typ
    - action: Open the PDF and verify the comment is visible
